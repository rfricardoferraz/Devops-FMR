name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

jobs:
  build:
    strategy:
      matrix:
        node-version: [v16, v17]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm --prefix frontend install
      - run: npm --prefix frontend run build
      - run: cd frontend && npx next export
      - uses: actions/upload-artifact@v3
        with:
          name: deploy
          path: frontend/out

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_EC2_METADATA_DISABLED: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Configurando Python
        run: |
          python3 -m venv py3
          source py3/bin/activate
          python -m pip install --upgrade pip
          pip install boto3 botocore ansible==2.10
          echo "ANSIBLE_PYTHON_INTERPRETER=$VIRTUAL_ENV/bin/python3" >> $GITHUB_ENV
          echo "ENVIRONMENT_SETUP=true" >> $GITHUB_ENV
      - name: Testando Ansible
        run: |
          source py3/bin/activate
          ansible-playbook -vvvv ansible/ping.yml
      - uses: actions/download-artifact@v3
        with:
          name: deploy
          path: ansible/frontend/out
      - name: Enviando Arquivos
        run: |
          source py3/bin/activate
          ansible-playbook -vvvv ansible/s3.yml
